{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lisa\\\\Downloads\\\\react_progate\\\\src\\\\components\\\\ContactForm.js\";\nimport React from 'react';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: false,\n      email: '',\n      hasEmailError: false,\n\n      /* Add the states \"content\" and \"hasContentError\" */\n      content: '',\n      hasContentError: false\n    };\n  }\n\n  handleEmailChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      email: inputValue,\n      hasEmailError: isEmpty\n    });\n  }\n  /* Declare the method handleContentChange */\n\n\n  handleContentChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      content: inputValue,\n      hasContentError: isEmpty\n    });\n  }\n\n  handleSubmit() {\n    this.setState({\n      isSubmitted: true\n    });\n  }\n\n  render() {\n    let emailErrorText;\n\n    if (this.state.hasEmailError) {\n      emailErrorText = /*#__PURE__*/React.createElement(\"p\", {\n        className: \"contact-message-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \"Please enter your email address\");\n    }\n    /* Declare the variable contentErrorText */\n\n\n    let contentErrorText;\n    /* Create an if statement with hasContentError as the condition */\n\n    if (this.state.hasContentError) {\n      contentErrorText = /*#__PURE__*/React.createElement(\"p\", {\n        className: \"contact-message-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, \"Please enter your message\");\n    }\n\n    let contactForm;\n\n    if (this.state.isSubmitted) {\n      contactForm = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contact-submit-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, \"Sent Successfully\");\n    } else {\n      contactForm = /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: () => {\n          this.handleSubmit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Email Address (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.email,\n        onChange: event => {\n          this.handleEmailChange(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }), emailErrorText, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, \"Message (required)\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        value: this.state.content,\n        onChange: event => {\n          this.handleContentChange(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }), contentErrorText, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, contactForm);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/Lisa/Downloads/react_progate/src/components/ContactForm.js"],"names":["React","ContactForm","Component","constructor","props","state","isSubmitted","email","hasEmailError","content","hasContentError","handleEmailChange","event","inputValue","target","value","isEmpty","setState","handleContentChange","handleSubmit","render","emailErrorText","contentErrorText","contactForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass ContactForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSubmitted: false,\r\n      email: '',\r\n      hasEmailError: false,\r\n      /* Add the states \"content\" and \"hasContentError\" */\r\n      content: '',\r\n      hasContentError: false,\r\n    };\r\n  }\r\n\r\n  handleEmailChange(event) {\r\n    const inputValue = event.target.value;\r\n    const isEmpty = inputValue === '';\r\n    this.setState({\r\n      email: inputValue,\r\n      hasEmailError: isEmpty,\r\n    });\r\n  }\r\n\r\n  /* Declare the method handleContentChange */\r\n  handleContentChange(event) {\r\n    const inputValue = event.target.value;\r\n    const isEmpty = inputValue === '';\r\n    this.setState({\r\n      content: inputValue,\r\n      hasContentError: isEmpty,\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.setState({isSubmitted: true});\r\n  }\r\n\r\n  render() {\r\n    let emailErrorText;\r\n    if (this.state.hasEmailError) {\r\n      emailErrorText = (\r\n        <p className='contact-message-error'>\r\n          Please enter your email address\r\n        </p>\r\n      );\r\n    }\r\n    \r\n    /* Declare the variable contentErrorText */\r\n    let contentErrorText;\r\n    \r\n    /* Create an if statement with hasContentError as the condition */\r\n    if (this.state.hasContentError) {\r\n      contentErrorText = (\r\n        <p className='contact-message-error'>\r\n         Please enter your message\r\n        </p>\r\n      )\r\n    }\r\n    \r\n    let contactForm;\r\n    if (this.state.isSubmitted) {\r\n      contactForm = (\r\n        <div className='contact-submit-message'>\r\n          Sent Successfully\r\n        </div>\r\n      );\r\n    } else {\r\n      contactForm = (\r\n        <form onSubmit={() => {this.handleSubmit()}} >\r\n          <p>Email Address (required)</p>\r\n          <input\r\n            value={this.state.email}\r\n            onChange={(event) => {this.handleEmailChange(event)}}\r\n          />\r\n          {emailErrorText}\r\n          <p>Message (required)</p>\r\n          {/* Add the value and an onChange event */}\r\n          <textarea\r\n            value={this.state.content}\r\n            onChange={(event) => {this.handleContentChange(event)}}\r\n          />\r\n          {/* Display contentErrorText */}\r\n          {contentErrorText}\r\n          \r\n          <input\r\n            type='submit'\r\n            value='Send'\r\n          />\r\n        </form>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div className='contact-form'>\r\n        {contactForm}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}